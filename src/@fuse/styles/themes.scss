@use 'sass:map';
@use '@angular/material' as mat;
@use 'user-themes' as userThemes;

/* Set the base colors for light themes */
$light-base: (
    foreground: (
        base: #000000,
        divider: #e2e8f0,
        /* slate.200 */ dividers: #e2e8f0,
        /* slate.200 */ disabled: #94a3b8,
        /* slate.400 */ disabled-button: #94a3b8,
        /* slate.400 */ disabled-text: #94a3b8,
        /* slate.400 */ elevation: #000000,
        hint-text: #94a3b8,
        /* slate.400 */ secondary-text: #64748b,
        /* slate.500 */ icon: #64748b,
        /* slate.500 */ icons: #64748b,
        /* slate.500 */ mat-icon: #64748b,
        /* slate.500 */ text: #1e293b,
        /* slate.800 */ slider-min: #1e293b,
        /* slate.800 */ slider-off: #cbd5e1,
        /* slate.300 */ slider-off-active: #94a3b8 /* slate.400 */,
    ),
    background: (
        status-bar: #cbd5e1,
        /* slate.300 */ app-bar: #ffffff,
        background: #f1f5f9,
        /* slate.100 */ hover: rgba(148, 163, 184, 0.12),
        /* slate.400 + opacity */ card: #ffffff,
        dialog: #ffffff,
        disabled-button: rgba(148, 163, 184, 0.38),
        /* slate.400 + opacity */ raised-button: #ffffff,
        focused-button: #64748b,
        /* slate.500 */ selected-button: #e2e8f0,
        /* slate.200 */ selected-disabled-button: #e2e8f0,
        /* slate.200 */ disabled-button-toggle: #cbd5e1,
        /* slate.300 */ unselected-chip: #e2e8f0,
        /* slate.200 */ disabled-list-option: #cbd5e1,
        /* slate.300 */ tooltip: #1e293b /* slate.800 */,
    ),
);

/* Set the base colors for dark themes */
$dark-base: (
    foreground: (
        base: #ffffff,
        divider: rgba(241, 245, 249, 0.12),
        /* slate.100 + opacity */ dividers: rgba(241, 245, 249, 0.12),
        /* slate.100 + opacity */ disabled: #475569,
        /* slate.600 */ disabled-button: #1e293b,
        /* slate.800 */ disabled-text: #475569,
        /* slate.600 */ elevation: #000000,
        hint-text: #64748b,
        /* slate.500 */ secondary-text: #94a3b8,
        /* slate.400 */ icon: #f1f5f9,
        /* slate.100 */ icons: #f1f5f9,
        /* slate.100 */ mat-icon: #94a3b8,
        /* slate.400 */ text: #ffffff,
        slider-min: #ffffff,
        slider-off: #64748b,
        /* slate.500 */ slider-off-active: #94a3b8 /* slate.400 */,
    ),
    background: (
        status-bar: #0f172a,
        /* slate.900 */ app-bar: #0f172a,
        /* slate.900 */ background: #0f172a,
        /* slate.900 */ hover: rgba(255, 255, 255, 0.05),
        card: #1e293b,
        /* slate.800 */ dialog: #1e293b,
        /* slate.800 */ disabled-button: rgba(15, 23, 42, 0.38),
        /* slate.900 + opacity */ raised-button: #0f172a,
        /* slate.900 */ focused-button: #e2e8f0,
        /* slate.200 */ selected-button: rgba(255, 255, 255, 0.05),
        selected-disabled-button: #1e293b,
        /* slate.800 */ disabled-button-toggle: #0f172a,
        /* slate.900 */ unselected-chip: #475569,
        /* slate.600 */ disabled-list-option: #e2e8f0,
        /* slate.200 */ tooltip: #64748b /* slate.500 */,
    ),
);

/* Include the core Angular Material styles */
@include mat.core();
@include mat.elevation-classes();
@include mat.app-background();

/* Reusable typography configuration */
$typography-config: mat.m2-define-typography-config(
    $font-family: theme('fontFamily.sans'),
    $headline-1:
        mat.m2-define-typography-level(
            1.875rem,
            2.25rem,
            800,
            theme('fontFamily.sans')
        ),
    $headline-2:
        mat.m2-define-typography-level(
            1.25rem,
            1.75rem,
            700,
            theme('fontFamily.sans')
        ),
    $headline-3:
        mat.m2-define-typography-level(
            1.125rem,
            1.75rem,
            600,
            theme('fontFamily.sans')
        ),
    $headline-4:
        mat.m2-define-typography-level(
            0.875rem,
            1.25rem,
            600,
            theme('fontFamily.sans')
        ),
    $headline-5:
        mat.m2-define-typography-level(
            0.875rem,
            1.5rem,
            400,
            theme('fontFamily.sans')
        ),
    $headline-6:
        mat.m2-define-typography-level(
            0.875rem,
            1.5rem,
            400,
            theme('fontFamily.sans')
        ),
    $subtitle-1:
        mat.m2-define-typography-level(
            1rem,
            1.75rem,
            400,
            theme('fontFamily.sans')
        ),
    $subtitle-2:
        mat.m2-define-typography-level(
            0.875rem,
            1.25rem,
            600,
            theme('fontFamily.sans')
        ),
    $body-1:
        mat.m2-define-typography-level(
            0.875rem,
            1.5rem,
            400,
            theme('fontFamily.sans')
        ),
    $body-2:
        mat.m2-define-typography-level(
            0.875rem,
            1.5rem,
            400,
            theme('fontFamily.sans')
        ),
    $caption:
        mat.m2-define-typography-level(
            0.75rem,
            1rem,
            400,
            theme('fontFamily.sans')
        ),
    $button:
        mat.m2-define-typography-level(
            0.875rem,
            0.875rem,
            500,
            theme('fontFamily.sans')
        ),
    $overline:
        mat.m2-define-typography-level(
            0.75rem,
            2rem,
            500,
            theme('fontFamily.sans')
        )

);

/* Create a base theme without any color to set the density and typography */
@include mat.all-component-themes(
    (
        color: null,
        density: 0,
        typography: $typography-config,
    )

);

/* Loop through user themes and generate Angular Material themes */
@each $name, $theme in userThemes.$user-themes {
    /* Generate the palettes */
    $palettes: ();
    @each $palette-name in (primary, accent, warn) {
        $palette-config: map.get($theme, $palette-name);
        $palette: mat.m2-define-palette($palette-config);

        $default-color: if(
            map.has-key($palette-config, DEFAULT),
            map.get($palette-config, DEFAULT),
            map.get($palette, default)
        );
        $lighter-color: if(
            map.has-key($palette-config, 100),
            map.get($palette-config, 100),
            map.get($palette, lighter)
        );
        $darker-color: if(
            map.has-key($palette-config, 700),
            map.get($palette-config, 700),
            map.get($palette, darker)
        );
        $contrast-map: map.get($palette-config, contrast);
        $default-contrast: if(
            $contrast-map and map.has-key($contrast-map, DEFAULT),
            map.get($contrast-map, DEFAULT),
            map.get($palette, default-contrast)
        );
        $lighter-contrast: if(
            $contrast-map and map.has-key($contrast-map, 100),
            map.get($contrast-map, 100),
            map.get($palette, lighter-contrast)
        );
        $darker-contrast: if(
            $contrast-map and map.has-key($contrast-map, 700),
            map.get($contrast-map, 700),
            map.get($palette, darker-contrast)
        );

        /* Replace the default colors on the defined Material palette */
        $palette: map.merge(
            $palette,
            (
                default: $default-color,
                lighter: $lighter-color,
                darker: $darker-color,
                text: $default-color,
                default-contrast: $default-contrast,
                lighter-contrast: $lighter-contrast,
                darker-contrast: $darker-contrast,
            )
        );

        $palettes: map.set($palettes, $palette-name, $palette);
    }

    $light-foreground: map.merge(
        mat.$m2-light-theme-foreground-palette,
        map.get($light-base, foreground)
    );
    $light-background: map.merge(
        mat.$m2-light-theme-background-palette,
        map.get($light-base, background)
    );

    $dark-foreground: map.merge(
        mat.$m2-dark-theme-foreground-palette,
        map.get($dark-base, foreground)
    );
    $dark-background: map.merge(
        mat.$m2-dark-theme-background-palette,
        map.get($dark-base, background)
    );

    $light-theme: mat.m2-define-light-theme(
        (
            color: map.merge(
                $palettes,
                (
                    foreground: $light-foreground,
                    background: $light-background,
                )
            ),
            typography: $typography-config,
            density: 0,
        )
    );

    $dark-theme: mat.m2-define-dark-theme(
        (
            color: map.merge(
                $palettes,
                (
                    foreground: $dark-foreground,
                    background: $dark-background,
                )
            ),
            typography: $typography-config,
            density: 0,
        )
    );

    /* Ensure typography & density information are present */
    $light-theme: map.merge(
        $light-theme,
        (
            typography: $typography-config,
            density: 0,
        )
    );

    $dark-theme: map.merge(
        $dark-theme,
        (
            typography: $typography-config,
            density: 0,
        )
    );

    /* Generate and encapsulate Angular Material themes */
    #{map.get($theme, selector)} .light,
    #{map.get($theme, selector)}.light {
        @include mat.all-component-themes($light-theme);
    }

    #{map.get($theme, selector)} .dark,
    #{map.get($theme, selector)}.dark {
        @include mat.all-component-themes($dark-theme);
    }
}
